(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([e.id,"*{\r\n    box-sizing: border-box;\r\n    \r\n}\r\n\r\nbody {\r\n font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n \r\n font-weight: 300;\r\n}\r\n\r\n.hometabs {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows:  1fr auto;\r\n    list-style-type: none;\r\n\r\n\r\n}\r\n\r\n.hometabs li{\r\n    border: 1px solid blue;\r\n    border-bottom: none;\r\n    flex: 0 1 30%;\r\n    cursor: pointer;\r\n}\r\n\r\n.hometabs li:hover, .hometabs li::selection{\r\n    background-color: lightgrey;\r\n    border: 3px solid ;\r\n}\r\n\r\n.hometabs li a::selection {\r\n    text-decoration: none;\r\n}\r\n\r\n.hometabs li div {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    \r\n}\r\n\r\n.menu {\r\n    border: 1px solid black;\r\n    display: block;\r\n    grid-area: 2/ 1 / span 1/ span 3;\r\n}\r\n\r\n.menugrid{\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows:  1fr auto;\r\n}\r\n\r\n.hide{\r\n    display: none;\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;;AAE1B;;AAEA;CACC,mJAAmJ;;CAEnJ,gBAAgB;AACjB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,6BAA6B;IAC7B,qBAAqB;;;AAGzB;;AAEA;IACI,sBAAsB;IACtB,mBAAmB;IACnB,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,0BAA0B;;AAE9B;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["*{\r\n    box-sizing: border-box;\r\n    \r\n}\r\n\r\nbody {\r\n font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n \r\n font-weight: 300;\r\n}\r\n\r\n.hometabs {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows:  1fr auto;\r\n    list-style-type: none;\r\n\r\n\r\n}\r\n\r\n.hometabs li{\r\n    border: 1px solid blue;\r\n    border-bottom: none;\r\n    flex: 0 1 30%;\r\n    cursor: pointer;\r\n}\r\n\r\n.hometabs li:hover, .hometabs li::selection{\r\n    background-color: lightgrey;\r\n    border: 3px solid ;\r\n}\r\n\r\n.hometabs li a::selection {\r\n    text-decoration: none;\r\n}\r\n\r\n.hometabs li div {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    \r\n}\r\n\r\n.menu {\r\n    border: 1px solid black;\r\n    display: block;\r\n    grid-area: 2/ 1 / span 1/ span 3;\r\n}\r\n\r\n.menugrid{\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows:  1fr auto;\r\n}\r\n\r\n.hide{\r\n    display: none;\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n}\r\n\r\n"],sourceRoot:""}]);const i=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),s=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(s).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},s=[],i=0;i<e.length;i++){var c=e[i],l=r.base?c[0]+r.base:c[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var p=t(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var A=o(m,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:A,references:1})}s.push(u)}return s}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var i=t(a[s]);n[i].references--}for(var c=r(e,o),l=0;l<a.length;l++){var d=t(a[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"506fc50adc1bca44ae1a.jpg",n=JSON.parse('{"nP":"This is the best restaurant","aJ":"Forget what they offering out there, this is the best restaurant for sure","GI":{"risotto":["Creamy Vegetable Zucca Risotto 1300 NEW","Broccolini, Peppers, Tomato and Pumpkin seeds","Risotto Al Polo 1700","Chicken Pieces with Mushrooms and Spinach","Green Risotto Gamberi 2300 (N)"],"fish and seafood":["Stir Fried Baby Octopus and Calamari 2000","With Vegetables, Soy and Oyster Sauce, Rice Noodles","Fresh Deep-fried Lake ‘Ngege’ 2000","Whole Tilapia served with Tomato basil salsa, Kale and Ugali","Seychellois Coconut fish Curry 2100","Simmered in Aromatic Spiced Coconut Milk, steamed Rice","Traditional “Fish & Chips” 2000","Chucky Chips and Tartar Sauce","Salmon fillet “Florentine” 3200"],"meat and fowl":["Cheesy Parmesan Chicken 2100","Over sautéed local Chard and Garlic Mash, Marinara Sauce","Grilled Pork Chops 2100 (P)","Buttered Vegetables and Potato Mousseline","Caramelized Pineapple Relish","Slow cooked Beef Short Rib 2200"]}}');function r(){const e=document.createElement("div"),t=document.createElement("li"),r=document.createElement("div");r.setAttribute("class","risottoMenu"),r.classList.add("menu");const o=n.GI.risotto,a=document.createElement("a");a.textContent=Object.keys(n.GI)[0],a.href="#risottoMenu",a.classList.add("headers"),t.appendChild(a);for(let e in o){const n=document.createElement("p");n.textContent=o[e],r.appendChild(n)}e.appendChild(t),e.appendChild(r);const s=[];return s.push(t),s.push(r),s}function o(){document.createElement("div");const e=document.createElement("li"),t=document.createElement("div");t.classList.add("fishMenu"),t.classList.add("menu");const r=n.GI["fish and seafood"],o=document.createElement("a");o.textContent=Object.keys(n.GI)[1],o.href="#fishMenu",o.classList.add("headers"),e.appendChild(o);for(let e in r){const n=document.createElement("p");n.textContent=r[e],t.appendChild(n)}const a=[];return a.push(e),a.push(t),a}function a(){document.createElement("div");const e=document.createElement("li"),t=document.createElement("div");t.classList.add("meatMenu"),t.classList.add("menu");const r=n.GI["meat and fowl"],o=document.createElement("a");o.textContent=Object.keys(n.GI)[2],o.href="#meatMenu",o.classList.add("headers"),e.appendChild(o);for(let e in r){const n=document.createElement("p");n.textContent=r[e],t.appendChild(n)}const a=[];return a.push(e),a.push(t),a}var s=t(379),i=t.n(s),c=t(795),l=t.n(c),d=t(569),u=t.n(d),p=t(565),m=t.n(p),A=t(216),h=t.n(A),f=t(589),C=t.n(f),b=t(426),g={};g.styleTagTransform=C(),g.setAttributes=m(),g.insert=u().bind(null,"head"),g.domAPI=l(),g.insertStyleElement=h(),i()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals,console.log("Switched a bit; The start of a restaurant webpage");const y=document.querySelector("#content"),v=document.createElement("div"),I=r()[0],B=o()[0],E=a()[0],x=r()[1],S=o()[1],w=a()[1],k=document.createElement("div");v.classList.add("menugrid"),console.log(o()),console.log(r()),k.classList.add("hometabs");const M=[I,B,E],L=[x,S,w];function T(e){M.forEach((n=>{n.querySelector("a").textContent==e.target.textContent&&(L.forEach((e=>{e.classList.contains(n.querySelector("a").getAttribute("href").slice(1))?(e.classList.remove("hide"),v.appendChild(e)):e.classList.add("hide")})),console.log(n.querySelector("a").getAttribute("href").slice(1)))}))}k.append(I,B,E),v.appendChild(x),v.append(k),y.appendChild(function(){const t=document.createElement("div"),r=document.createElement("h2"),o=document.createElement("p");r.textContent=n.nP,o.textContent=n.aJ;const a=new Image;return a.src=e,t.appendChild(a),t.appendChild(r),t.appendChild(o),t}()),y.appendChild(v),function(){for(let e in M)M[e].addEventListener("click",(e=>{T(e)}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,